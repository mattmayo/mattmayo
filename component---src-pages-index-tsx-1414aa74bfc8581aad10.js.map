{"version":3,"sources":["webpack:///./src/components/layout.tsx","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/components/image.tsx","webpack:///./src/components/matt-card.tsx","webpack:///./src/pages/index.tsx","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js"],"names":["Layout","_ref","children","react","Helmet","rel","href","StaticQueryContext","React","createContext","StaticQuery","props","react_default","a","createElement","Consumer","staticQueryData","data","query","render","propTypes","PropTypes","object","string","isRequired","func","Image","gatsby_browser_entry_StaticQuery","gatsby_image_default","fluid","mattElvisImage","childImageSharp","_2103001809","MattCard","index_es","components_image","IndexPage","layout","matt_card","m","module","exports","require","default","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape"],"mappings":"8HAeeA,EAZA,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,SAAH,OACbC,EAAA,cAACA,EAAA,SAAD,KACEA,EAAA,cAACC,EAAA,OAAD,KACED,EAAA,sBACEE,IAAI,aACJC,KAAK,gEAGRJ,sCCCCK,gBAAqBC,IAAMC,cAAc,KAEzCC,EAAc,SAAAC,GAAK,OACvBC,EAAAC,EAAAC,cAACP,EAAmBQ,SAApB,KACG,SAAAC,GACC,OACEL,EAAMM,MACLD,EAAgBL,EAAMO,QAAUF,EAAgBL,EAAMO,OAAOD,MAEtDN,EAAMQ,QAAUR,EAAMT,UAC5BS,EAAMM,KAAON,EAAMM,KAAKA,KAAOD,EAAgBL,EAAMO,OAAOD,MAGvDL,EAAAC,EAAAC,cAAA,uCA4BfJ,EAAYU,UAAY,CACtBH,KAAMI,IAAUC,OAChBJ,MAAOG,IAAUE,OAAOC,WACxBL,OAAQE,IAAUI,KAClBvB,SAAUmB,IAAUI,4BC1BPC,EAhBD,kBACZlB,MAAAM,cAACa,EAAD,CACET,MAAK,aAWLC,OAAQ,SAAAF,GAAI,OAAIT,MAAAM,cAACc,EAAAf,EAAD,CAAKgB,MAAOZ,EAAKa,eAAeC,gBAAgBF,SAZlEZ,KAAAe,KCCaC,EAbE,kBACfzB,MAAAM,cAAA,WACEN,MAAAM,cAACoB,EAAA,EAAD,KACE1B,MAAAM,cAACoB,EAAA,EAAD,KACE1B,MAAAM,cAACoB,EAAA,EAAD,KACE1B,MAAAM,cAACqB,EAAD,OAEF3B,MAAAM,cAAA,8BCDOsB,UANG,kBAChB5B,MAAAM,cAACuB,EAAD,KACE7B,MAAAM,cAACwB,EAAD,6BCNJ,IAAsBC,EAKpBC,EAAOC,SALaF,EAKWG,EAAQ,OALRH,EAAEI,SAAYJ,4JCMzCK,EAAmB,SAAA3C,GAAkB,IAAf4C,EAAe5C,EAAf4C,SACpBC,EAAgBC,UAAOC,4BAA4BH,EAASI,UAClE,OAAOzC,IAAMM,cAAcoC,IAApBC,OAAAC,OAAA,CACLP,WACAC,iBACGA,EAAcO,QAIrBT,EAAiBxB,UAAY,CAC3ByB,SAAUxB,IAAUiC,MAAM,CACxBL,SAAU5B,IAAUE,OAAOC,aAC1BA,YAGUoB","file":"component---src-pages-index-tsx-1414aa74bfc8581aad10.js","sourcesContent":["import * as React from 'react';\nimport { Helmet } from 'react-helmet';\n\nconst Layout = ({ children }) => (\n  <React.Fragment>\n    <Helmet>\n      <link\n        rel=\"stylesheet\"\n        href=\"https://fonts.googleapis.com/css?family=Roboto:300,400,500\"\n      />\n    </Helmet>\n    {children}\n  </React.Fragment>\n);\n\nexport default Layout;\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","import { graphql, StaticQuery } from 'gatsby';\nimport Img from 'gatsby-image';\nimport * as React from 'react';\n\n/*\n * This component is built using `gatsby-image` to automatically serve optimized\n * images with lazy loading and reduced file sizes. The image is loaded using a\n * `StaticQuery`, which allows us to load the image from directly within this\n * component, rather than having to pass the image data down from pages.\n *\n * For more information, see the docs:\n * - `gatsby-image`: https://gatsby.dev/gatsby-image\n * - `StaticQuery`: https://gatsby.dev/staticquery\n */\n\nconst Image = () => (\n  <StaticQuery\n    query={graphql`\n      query {\n        mattElvisImage: file(relativePath: { eq: \"images/matt-elvis-1.png\" }) {\n          childImageSharp {\n            fluid(maxWidth: 300) {\n              ...GatsbyImageSharpFluid\n            }\n          }\n        }\n      }\n    `}\n    render={data => <Img fluid={data.mattElvisImage.childImageSharp.fluid} />}\n  />\n);\nexport default Image;\n","import { Card, CardActionArea, CardMedia } from '@material-ui/core';\nimport * as React from 'react';\nimport Image from '../components/image';\n\nconst MattCard = () => (\n  <div>\n    <Card>\n      <CardActionArea>\n        <CardMedia>\n          <Image />\n        </CardMedia>\n        <h1>mattmayo.com</h1>\n      </CardActionArea>\n    </Card>\n  </div>\n);\n\nexport default MattCard;\n","import * as React from 'react';\nimport Layout from '../components/layout';\nimport MattCard from '../components/matt-card';\n\nconst IndexPage = () => (\n  <Layout>\n    <MattCard />\n  </Layout>\n);\n\nexport default IndexPage;\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n"],"sourceRoot":""}